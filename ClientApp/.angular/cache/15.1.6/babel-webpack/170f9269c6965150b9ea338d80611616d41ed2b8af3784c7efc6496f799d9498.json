{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nexport class ConfigService {\n  constructor(http) {\n    this.http = http;\n  }\n}\nConfigService.ɵfac = function ConfigService_Factory(t) {\n  return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\nConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigService,\n  factory: ConfigService.ɵfac\n});\nexport class HomeComponent {\n  constructor(http) {\n    this.http = http;\n    this.shape = \"\";\n    this.width = \"0px\";\n    this.height = \"0px\";\n    this.radius = \"0px\";\n    this.length = \"0px\";\n    this.input = \"\";\n  }\n  bindShape(event) {\n    if (event.shape != null || undefined) {\n      this.shape = event.shape;\n    }\n    if (event.width != null || undefined) {\n      this.width = event.width + 'px';\n    }\n    if (event.height != null || undefined) {\n      this.height = event.height + 'px';\n    }\n    if (event.radius != null || undefined) {\n      this.radius = event.radius + 'px';\n    }\n    if (event.length != null || undefined) {\n      this.length = event.length + 'px';\n    }\n  }\n  bindCSS() {\n    ///switch case for shape\n    switch (this.shape) {\n      case \"Isosceles Triangle\":\n        return {\n          'border-bottom': this.height + ' solid #0d6efd',\n          'border-left': this.width + ' solid transparent',\n          'border-right': this.width + ' solid transparent'\n        };\n      case \"Square\":\n        return {\n          'width': this.width,\n          'height': this.height,\n          'background-color': '#0d6efd'\n        };\n      case \"Scalene Triangle\":\n        return {\n          'width': '0',\n          'height': '0',\n          'border-left': this.width + ' solid transparent',\n          'border-right': this.height + ' solid transparent',\n          'border-bottom': this.length + ' solid #0d6efd'\n        };\n      case \"Parallelogram\":\n        return {\n          'width': this.width,\n          'height': this.height,\n          'background-color': '#0d6efd',\n          'transform': 'skewX(20deg)'\n        };\n      case \"Equilateral Triangle\":\n        return {\n          'width': '0',\n          'height': '0',\n          'border-left': this.width + ' solid transparent',\n          'border-right': this.width + ' solid transparent',\n          'border-bottom': this.height + ' solid #0d6efd'\n        };\n      case \"Pentagon\":\n        return {\n          'width': '0',\n          'height': '0',\n          'border-bottom': this.height + ' solid #0d6efd',\n          'border-left': this.width + ' solid transparent',\n          'border-right': this.width + ' solid transparent',\n          'transform': 'rotate(36deg)',\n          'position': 'relative',\n          'left': '-10px'\n        };\n      case \"Rectangle\":\n        return {\n          'width': this.width,\n          'height': this.height,\n          'background-color': '#0d6efd'\n        };\n      case \"Hexagon\":\n        return {\n          'width': '0',\n          'height': '0',\n          'border-bottom': this.height + ' solid #0d6efd',\n          'border-left': this.width + ' solid transparent',\n          'border-right': this.width + ' solid transparent',\n          'transform': 'rotate(90deg)',\n          'position': 'relative',\n          'left': '-10px'\n        };\n      case \"Heptagon\":\n        return {\n          'width': '0',\n          'height': '0',\n          'border-bottom': this.height + ' solid #0d6efd',\n          'border-left': this.width + ' solid transparent',\n          'border-right': this.width + ' solid transparent',\n          'transform': 'rotate(90deg)',\n          'position': 'relative',\n          'left': '-10px'\n        };\n      case \"Octagon\":\n        return {\n          'width': '0',\n          'height': '0',\n          'border-bottom': this.height + ' solid #0d6efd',\n          'border-left': this.width + ' solid transparent',\n          'border-right': this.width + ' solid transparent',\n          'transform': 'rotate(90deg)',\n          'position': 'relative',\n          'left': '-10px'\n        };\n      case \"Circle\":\n        return {\n          'width': this.width,\n          'height': this.height,\n          'border-radius': '50%',\n          'background-color': '#0d6efd'\n        };\n      case \"Oval\":\n        return {\n          'width': this.width,\n          'height': this.height,\n          'border-radius': '50%',\n          'background-color': '#0d6efd'\n        };\n      default:\n        return {\n          'width': '0'\n        };\n    }\n  }\n  submit() {\n    ///create a post request to the https://localhost:44420/\n    //with the input as the body\n    let _headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    //create a json object\n    let json = JSON.stringify(this.input);\n    // this.http.post('https://localhost:44420/weatherforecast/Input', json, {headers:_headers}).subscribe((data) => {\n    //   console.log(data + \" top\");\n    // });\n    ///create a post request to https://localhost:44420/weatherforecast/Input with input as the body\n    fetch('https://localhost:44420/weatherforecast/Input', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.input)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.bindShape(data);\n    }).catch(rejected => {\n      alert(rejected);\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 31,\n  vars: 3,\n  consts: [[1, \"container\"], [\"type\", \"text\", \"placeholder\", \"Enter phrase\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"ngClass\", \"ngStyle\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Lynkz Code Puzzle\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Shape Generator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \"Please enter what shape you would to generate.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7, \"Here are some examples:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\")(9, \"li\")(10, \"i\");\n      i0.ɵɵtext(11, \"Draw a circle with a radius of 100\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"li\")(13, \"i\");\n      i0.ɵɵtext(14, \"Draw a square with a side length of 200\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"li\")(16, \"i\");\n      i0.ɵɵtext(17, \"Draw a rectangle with a width of 250 and a height of 400\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"li\")(19, \"i\");\n      i0.ɵɵtext(20, \"Draw an octagon witha side length of 200\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"li\")(22, \"i\");\n      i0.ɵɵtext(23, \"Draw an isosceles triangle with a height of 200 and width of 100\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 0)(25, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.input = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\")(27, \"br\");\n      i0.ɵɵelementStart(28, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_28_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtext(29, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(30, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngModel\", ctx.input);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", ctx.shape)(\"ngStyle\", ctx.bindCSS());\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgStyle, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","ConfigService","constructor","http","factory","HomeComponent","bindShape","event","shape","undefined","width","height","radius","length","bindCSS","submit","_headers","json","JSON","stringify","input","fetch","method","headers","body","then","response","data","console","log","catch","rejected","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Elijah\\Documents\\webProjects\\Lynkz\\ClientApp\\src\\app\\home\\home.component.ts","C:\\Users\\Elijah\\Documents\\webProjects\\Lynkz\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  constructor(private http: HttpClient) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  shape = \"\";\r\n  width = \"0px\";\r\n  height = \"0px\";\r\n  radius = \"0px\";\r\n  length = \"0px\";\r\n\r\n  public bindShape(event: any) {\r\n    if(event.shape != null || undefined){\r\n      this.shape = event.shape;\r\n    }\r\n    if(event.width != null || undefined){\r\n      this.width = event.width + 'px';\r\n    }\r\n    if(event.height != null || undefined){\r\n      this.height = event.height + 'px';\r\n    }\r\n    if(event.radius != null || undefined){\r\n      this.radius = event.radius + 'px';\r\n    }\r\n    if(event.length != null || undefined){\r\n      this.length = event.length + 'px';\r\n    }\r\n  }\r\n\r\n  public bindCSS(){\r\n    ///switch case for shape\r\n    switch(this.shape){\r\n      case \"Isosceles Triangle\":\r\n        return {\r\n          'border-bottom': this.height + ' solid #0d6efd',\r\n          'border-left': this.width + ' solid transparent',\r\n          'border-right': this.width + ' solid transparent'\r\n        };\r\n      case \"Square\":\r\n        return {\r\n          'width': this.width,\r\n          'height': this.height,\r\n          'background-color': '#0d6efd'\r\n        };\r\n      case \"Scalene Triangle\":\r\n        return {\r\n          'width': '0',\r\n          'height': '0',\r\n          'border-left': this.width + ' solid transparent',\r\n          'border-right': this.height + ' solid transparent',\r\n          'border-bottom': this.length + ' solid #0d6efd'\r\n        };\r\n      case \"Parallelogram\":\r\n        return {\r\n          'width': this.width,\r\n          'height': this.height,\r\n          'background-color': '#0d6efd',\r\n          'transform': 'skewX(20deg)'\r\n        };\r\n      case \"Equilateral Triangle\":\r\n        return {\r\n          'width': '0',\r\n          'height': '0',\r\n          'border-left': this.width + ' solid transparent',\r\n          'border-right': this.width + ' solid transparent',\r\n          'border-bottom': this.height + ' solid #0d6efd'\r\n        };\r\n      case \"Pentagon\":\r\n        return {\r\n          'width': '0',\r\n          'height': '0',\r\n          'border-bottom': this.height + ' solid #0d6efd',\r\n          'border-left': this.width + ' solid transparent',\r\n          'border-right': this.width + ' solid transparent',\r\n          'transform': 'rotate(36deg)',\r\n          'position': 'relative',\r\n          'left': '-10px'\r\n        };\r\n      case \"Rectangle\":\r\n        return {\r\n          'width': this.width,\r\n          'height': this.height,\r\n          'background-color': '#0d6efd'\r\n        };\r\n      case \"Hexagon\":\r\n        return {\r\n          'width': '0',\r\n          'height': '0',\r\n          'border-bottom': this.height + ' solid #0d6efd',\r\n          'border-left': this.width + ' solid transparent',\r\n          'border-right': this.width + ' solid transparent',\r\n          'transform': 'rotate(90deg)',\r\n          'position': 'relative',\r\n          'left': '-10px'\r\n        };\r\n      case \"Heptagon\":\r\n        return {\r\n          'width': '0',\r\n          'height': '0',\r\n          'border-bottom': this.height + ' solid #0d6efd',\r\n          'border-left': this.width + ' solid transparent',\r\n          'border-right': this.width + ' solid transparent',\r\n          'transform': 'rotate(90deg)',\r\n          'position': 'relative',\r\n          'left': '-10px'\r\n        };\r\n      case \"Octagon\":\r\n        return {\r\n          'width': '0',\r\n          'height': '0',\r\n          'border-bottom': this.height + ' solid #0d6efd',\r\n          'border-left': this.width + ' solid transparent',\r\n          'border-right': this.width + ' solid transparent',\r\n          'transform': 'rotate(90deg)',\r\n          'position': 'relative',\r\n          'left': '-10px'\r\n        };\r\n      case \"Circle\":\r\n        return {\r\n          'width': this.width,\r\n          'height': this.height,\r\n          'border-radius': '50%',\r\n          'background-color': '#0d6efd'\r\n        };\r\n      case \"Oval\":\r\n        return {\r\n          'width': this.width,\r\n          'height': this.height,\r\n          'border-radius': '50%',\r\n          'background-color': '#0d6efd'\r\n        };\r\n      default:\r\n        return {\r\n          'width': '0'\r\n        };\r\n    }\r\n  }\r\n  public submit(){\r\n    ///create a post request to the https://localhost:44420/\r\n    //with the input as the body\r\n\r\n    let _headers: HttpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json' \r\n    });\r\n\r\n    //create a json object\r\n    let json = JSON.stringify(this.input);\r\n\r\n    // this.http.post('https://localhost:44420/weatherforecast/Input', json, {headers:_headers}).subscribe((data) => {\r\n    //   console.log(data + \" top\");\r\n    // });\r\n    ///create a post request to https://localhost:44420/weatherforecast/Input with input as the body\r\n    fetch('https://localhost:44420/weatherforecast/Input', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.input)\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.bindShape(data);\r\n      })\r\n      .catch(rejected => {\r\n          alert(rejected);\r\n      });        \r\n    }\r\n    input=\"\";\r\n}\r\n\r\n\r\n// •\tIsosceles Triangle  \t \r\n// • \tSquare  \r\n// •\tScalene Triangle  \t\t\r\n// •\tParallelogram  \r\n// •\tEquilateral Triangle  \t \r\n// •\tPentagon  \r\n// •\tRectangle \r\n// •\tHexagon  \r\n// •\tHeptagon  \r\n// •\tOctagon  \r\n// •\tCircle  \t \r\n// •\tOval \r\n","<h1>Lynkz Code Puzzle</h1>\r\n<h2>Shape Generator</h2>\r\n<p>Please enter what shape you would to generate.</p>\r\n<p>Here are some examples:</p>\r\n<ul>\r\n  <li><i>Draw a circle with a radius of 100</i></li>\r\n  <li><i>Draw a square with a side length of 200</i></li>\r\n  <li><i>Draw a rectangle with a width of 250 and a height of 400</i></li>\r\n  <li><i>Draw an octagon witha side length of 200</i></li>\r\n  <li><i>Draw an isosceles triangle with a height of 200 and width of 100</i></li>\r\n</ul>\r\n<!-- <form>\r\n  <div class=\"form-group\">\r\n    <input class=\"form-control\" [(ngModel)]=\"input\">\r\n    <p>{{ input }}</p>\r\n  </div>\r\n  <button type=\"submit\" (click)=\"submit()\" value=\"Submit\">Submit</button>\r\n  Your name is: {{input}}\r\n</form> -->\r\n\r\n<div class=\"container\">\r\n  <input type=\"text\" [(ngModel)]=\"input\" placeholder=\"Enter phrase\">\r\n  <br><br>\r\n  <button (click)=\"submit()\">Submit</button>    \r\n</div>\r\n\r\n<div [ngClass]=\"shape\" [ngStyle]=\"bindCSS()\">\r\n</div>\r\n\r\n<!-- <h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p> -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}