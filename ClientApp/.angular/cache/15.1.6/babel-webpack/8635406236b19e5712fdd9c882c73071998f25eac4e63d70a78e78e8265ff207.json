{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nlet HomeComponent = (_class = class HomeComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  onKey(value) {\n    this.name = value;\n    const formData = new FormData();\n    formData.append('name', this.name);\n    this.http.post('https://localhost:44336/api/SampleData/TestName', formData).subscribe(result => {\n      console.log(result);\n    }, error => console.error(error));\n  }\n}, _class.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n}, _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-home\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[1, \"form-group\"], [\"placeholder\", \"Specify what to draw here\", 1, \"form-control\", 3, \"keyup\"], [\"box\", \"\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Lynkz Code Puzzle\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Shape Generator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \"Please enter what shape you would to generate.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7, \"Here are some examples:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\")(9, \"li\")(10, \"i\");\n      i0.ɵɵtext(11, \"Draw a circle with a radius of 100\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"li\")(13, \"i\");\n      i0.ɵɵtext(14, \"Draw a square with a side length of 200\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"li\")(16, \"i\");\n      i0.ɵɵtext(17, \"Draw a rectangle with a width of 250 and a height of 400\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"li\")(19, \"i\");\n      i0.ɵɵtext(20, \"Draw an octagon witha side length of 200\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"li\")(22, \"i\");\n      i0.ɵɵtext(23, \"Draw an isosceles triangle with a height of 200 and width of 100\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"form\")(25, \"div\", 0)(26, \"input\", 1, 2);\n      i0.ɵɵlistener(\"keyup\", function HomeComponent_Template_input_keyup_26_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onKey(_r0.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(28);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(28);\n      i0.ɵɵtextInterpolate1(\" Your name is: \", ctx.name, \"\\n\");\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n  encapsulation: 2\n}), _class);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;;;;AAYlC,IAAMC,aAAa,aAAnB,MAAMA,aAAa;EAGxBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EACV;EAEJC,KAAK,CAACC,KAAa;IACjB,IAAI,CAACC,IAAI,GAAGD,KAAK;IACjB,MAAME,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzCD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACH,IAAI,CAAC;IAClC,IAAI,CAACH,IAAI,CAACO,IAAI,CAAC,iDAAiD,EAAEH,QAAQ,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MAC7FC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB,CAAC,EAAEG,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC;EAEnC;;mBAfWd,MAAa;AAAA;QAAbA,MAAa;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCZ1BC,0BAAI;MAAAA,iCAAiB;MAAAA,iBAAK;MAC1BA,0BAAI;MAAAA,+BAAe;MAAAA,iBAAK;MACxBA,yBAAG;MAAAA,8DAA8C;MAAAA,iBAAI;MACrDA,yBAAG;MAAAA,uCAAuB;MAAAA,iBAAI;MAC9BA,0BAAI;MACKA,mDAAkC;MAAAA,iBAAI;MAC7CA,2BAAI;MAAGA,wDAAuC;MAAAA,iBAAI;MAClDA,2BAAI;MAAGA,yEAAwD;MAAAA,iBAAI;MACnEA,2BAAI;MAAGA,yDAAwC;MAAAA,iBAAI;MACnDA,2BAAI;MAAGA,iFAAgE;MAAAA,iBAAI;MAE7EA,6BAAM;MAEuEA;QAAAA;QAAA;QAAA,OAASA,mCAAgB;MAAA,EAAC;MAAnGA,iBAAoG;MAEtGA,aACF;MAAAA,iBAAO;;;MADLA,gBACF;MADEA,wDACF;;;;;;ADJapB,aAAa,eAJzBD,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CACd,CAAC,GACWtB,aAAa,CAgBzB;SAhBYA,aAAa","names":["Component","HomeComponent","constructor","http","onKey","value","name","formData","FormData","append","post","subscribe","result","console","log","error","selectors","decls","vars","consts","template","i0","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Elijah\\Documents\\webProjects\\Lynkz\\ClientApp\\src\\app\\home\\home.component.ts","C:\\Users\\Elijah\\Documents\\webProjects\\Lynkz\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  name!: string;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  onKey(value: string):void {\r\n    this.name = value;\r\n    const formData: FormData = new FormData();\r\n    formData.append('name', this.name);\r\n    this.http.post('https://localhost:44336/api/SampleData/TestName', formData).subscribe(result => {\r\n      console.log(result);\r\n    }, error => console.error(error));\r\n    \r\n  }\r\n}\r\n","<h1>Lynkz Code Puzzle</h1>\r\n<h2>Shape Generator</h2>\r\n<p>Please enter what shape you would to generate.</p>\r\n<p>Here are some examples:</p>\r\n<ul>\r\n  <li><i>Draw a circle with a radius of 100</i></li>\r\n  <li><i>Draw a square with a side length of 200</i></li>\r\n  <li><i>Draw a rectangle with a width of 250 and a height of 400</i></li>\r\n  <li><i>Draw an octagon witha side length of 200</i></li>\r\n  <li><i>Draw an isosceles triangle with a height of 200 and width of 100</i></li>\r\n</ul>\r\n<form>\r\n  <div class=\"form-group\">\r\n    <input class=\"form-control\" placeholder=\"Specify what to draw here\" #box (keyup)=\"onKey(box.value)\">\r\n  </div>\r\n  Your name is: {{name}}\r\n</form>\r\n\r\n<!-- <h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p> -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}